/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param apiKey The Vonage API Key of the receiving account.
 * @param msisdn The phone number that this inbound message was sent from. Numbers are specified in E.164 format.
 * @param to The phone number the message was sent to. **This is your virtual number**. Numbers are specified in E.164 format.
 * @param messageId The ID of the message
 * @param text The message body for this inbound message.
 * @param type Possible values are:    - `text` - standard text.   - `unicode` - URLencoded   unicode  . This is valid for standard GSM, Arabic, Chinese, double-encoded characters and so on.   - `binary` - a binary message. 
 * @param keyword The first word in the message body. Converted to upper case.
 * @param messageTimestamp The time when Vonage started to push this Delivery Receipt to your webhook endpoint.
 * @param timestamp A unix timestamp representation of message-timestamp.
 * @param nonce A random string that forms part of the signed set of parameters, it adds an extra element of unpredictability into the signature for the request. You use the nonce and timestamp parameters with your shared secret to calculate and validate the signature for inbound messages.
 * @param concat True - if this is a concatenated message. This field does not exist if it is a single message
 * @param concatRef The transaction reference. All parts of this message share this value.
 * @param concatTotal The number of parts in this concatenated message.
 * @param concatPart The number of this part in the message. Counting starts at 1.
 * @param `data` The content of this message, if type is binary.
 * @param udh The hex encoded User Data Header, if type is binary
 */
@Serializable

data class InboundMessage (

    /* The Vonage API Key of the receiving account. */
    @SerialName(value = "api-key") @Required val apiKey: kotlin.String,

    /* The phone number that this inbound message was sent from. Numbers are specified in E.164 format. */
    @SerialName(value = "msisdn") @Required val msisdn: kotlin.String,

    /* The phone number the message was sent to. **This is your virtual number**. Numbers are specified in E.164 format. */
    @SerialName(value = "to") @Required val to: kotlin.String,

    /* The ID of the message */
    @SerialName(value = "messageId") @Required val messageId: kotlin.String,

    /* The message body for this inbound message. */
    @SerialName(value = "text") @Required val text: kotlin.String,

    /* Possible values are:    - `text` - standard text.   - `unicode` - URLencoded   unicode  . This is valid for standard GSM, Arabic, Chinese, double-encoded characters and so on.   - `binary` - a binary message.  */
    @SerialName(value = "type") @Required val type: kotlin.String,

    /* The first word in the message body. Converted to upper case. */
    @SerialName(value = "keyword") @Required val keyword: kotlin.String,

    /* The time when Vonage started to push this Delivery Receipt to your webhook endpoint. */
    @SerialName(value = "message-timestamp") @Required val messageTimestamp: kotlin.String,

    /* A unix timestamp representation of message-timestamp. */
    @SerialName(value = "timestamp") val timestamp: kotlin.String? = null,

    /* A random string that forms part of the signed set of parameters, it adds an extra element of unpredictability into the signature for the request. You use the nonce and timestamp parameters with your shared secret to calculate and validate the signature for inbound messages. */
    @SerialName(value = "nonce") val nonce: kotlin.String? = null,

    /* True - if this is a concatenated message. This field does not exist if it is a single message */
    @SerialName(value = "concat") val concat: kotlin.String? = null,

    /* The transaction reference. All parts of this message share this value. */
    @SerialName(value = "concat-ref") val concatRef: kotlin.String? = null,

    /* The number of parts in this concatenated message. */
    @SerialName(value = "concat-total") val concatTotal: kotlin.String? = null,

    /* The number of this part in the message. Counting starts at 1. */
    @SerialName(value = "concat-part") val concatPart: kotlin.String? = null,

    /* The content of this message, if type is binary. */
    @SerialName(value = "data") val `data`: org.openapitools.client.infrastructure.OctetByteArray? = null,

    /* The hex encoded User Data Header, if type is binary */
    @SerialName(value = "udh") val udh: kotlin.String? = null

) {


}

